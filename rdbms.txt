Write a PL/SQL program to find factorial of a number 


Program :

declare
n number;
fac number:=1;
i number;
 
begin
n:=&n;
 
for i in 1..n
loop
fac:=fac*i;
end loop;
 
dbms_output.put_line('factorial='||fac);
end;
/


Write a PL/SQL program to print table of a number


Program :

declare
n number
i number;
 
begin
n:=&n;
for i in 1..10
loop
dbms_output.put_line(n||' x '||i||' = '||n*i);
end loop;
end;
/


Write a PL/SQL program to check number is odd or even


Program :

declare
n number:=&n;
 
begin
if mod(n,2)=0
then
dbms_output.put_line('number is even');
else
dbms_output.put_line('number is odd');
end if;
end;
/

Write a PL/SQL program to swap two number 


Program  :

declare
    a number;
    b number;
    temp number;
 
begin
    a:=5;
    b:=10;
    
    dbms_output.put_line('before swapping:');
    dbms_output.put_line('a='||a||' b='||b);
    
    temp:=a;
    a:=b;
    b:=temp;
    
    dbms_output.put_line('after swapping:');
    dbms_output.put_line('a='||a||' b='||b);
    
end;
/


Write a PL/SQL program using control statements


Program:

DECLARE  
a number(3) := 200;  
BEGIN  
IF( a < 10 ) THEN  
dbms_output.put_line('a is less than 10 ' );  
ELSE  
dbms_output.put_line('a is not less than 10 ' );  
END IF;  
dbms_output.put_line('value of a is : ' || a);  
END;
/


Write a PL/SQL program to create a Trigger



Program :

create table tri (code number(4), item varchar(10), quantity number(4));

Table created

create or replace trigger S1 before insert on tri for each row
begin
if(: new.quantity<=0 or : new.quantity>=300)
thenraise_application_error(‘_2005’,’Enter the valid quantity ranges from 1 to 300’);
else
dbms_output.put_line(‘inserting a record’);
end if;
end;


Syntax for creating view :


CREATE VIEW [Brazil Customers] AS
SELECT CustomerName, ContactName
FROM Customers
WHERE Country = "Brazil";


